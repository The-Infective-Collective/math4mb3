\documentclass{article}

\begin{document}


<<>>=
library(Rcpp)
library(tidyverse,stringr)
sourceCpp("SIRmodel.cpp")

params <- list()
params <- within(params, {
    
    # RNG seed
    seed <- 0
    
    # time step length (1 day)
    dt <- 1/365
    
    # number of years
    nyears <- 100
    
    # number of time steps
    nsteps <- nyears/dt
    
    # number of spatial patches (2 for most purposes, more for exploring mixing structure)
    mpatches <- 2
    
    # birth/death rate
    mu <- 1/70
    
    # recovery rate
    gamma <- 12/365 
    
    # R0
    R0 <- 17
    
    # population size in each patch
    pop <- 1e6
    
    # transmission rate
    beta <- R0*(gamma+mu)/pop 

    # connectivity matrix
    conmat <- matrix(rep(mpatches^(-1), mpatches^2), nrow = mpatches, ncol = mpatches)
    
    # initial conditions, 
    init <- within(list(), {
        S <- round(pop/R0)
        I <- mu/(mu + gamma)*(1 - 1/R0)*pop
        R <- pop-S-I
    })
})

# set seed
set.seed(params$seed)

# function to run model and return data frame
run_SIR <- function(p) {
  # Run the model
  raw.result <- SIRmodel(p)
  
  # Initialize result data frame
  result <- data_frame(t = raw.result$time)
  
  # Pull results
  S <- raw.result$S
  I <- raw.result$I
  R <- raw.result$R
  
  # Change column names
  colnames(S) <- str_c("S", 1:p$mpatches)
  colnames(I) <- str_c("I", 1:p$mpatches)
  colnames(R) <- str_c("R", 1:p$mpatches)
  
  # Combine data frames and return
  cbind(result, S, I, R) 
}

# run model
result <- run_SIR(params)
result

# plot result
plot(result$t, result$I1, type = "l")
@



\end{document}