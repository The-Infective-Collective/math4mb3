\documentclass{article}

\begin{document}


<<>>=
library(Rcpp)
library(tidyverse,stringr)
sourceCpp("try2.cpp")

params <- list()
params <- within(params, {
    
 ## set rng state
    seed <- 0
    tau <- 0.001 # in years
    nyears <- 10
    
    ## total number of steps
    nsteps <- nyears/tau
    
    ## total number of patches
    mpatch <- 2
    
    mu <- 1/70 #death rate
    gamma <- 365/10 #recovery rate
    R0 <- 10
    ## refers to R0 above
    beta <- R0*(gamma+mu) #transmission rate
    
    pop <- 1e6
    
    dt <- 0.9
    ## initial conditions, list within list
    ## use within() to modify empty list, as above
    init <- within(list(), {
        S <- round(pop/R0)
        I <- round(pop*mu*(1-1/R0)/(gamma+mu))
        ## refers to S,I above
        R <- pop-S-I
    })
})

set.seed(params$seed)

## run the model once
result.df <- SIRmodel(params)
    
library(plyr)
nsim <- 12

## run many sims, combine all results into one data.frame
## plyr will combine results for us
result.rep <- ldply(1:nsim, function(.nn) {
    set.seed(.nn)
    ## run the model
    result <- tauleapCpp(params)
    ## this wastes space, but is very simple and aids plotting
    result$nsim <- .nn
    return(result)
})

@



\end{document}